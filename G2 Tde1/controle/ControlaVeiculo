package controle;

import dominio.Automovel;
import java.io.*;
import java.util.*;

public class ControlaVeiculo {
    private ArrayList<Automovel> veiculos = new ArrayList<>();
    private final String ARQUIVO = "veiculos.txt";

    public void carregarDados() {
        try (BufferedReader br = new BufferedReader(new FileReader(ARQUIVO))) {
            String linha;
            while ((linha = br.readLine()) != null) {
                String[] dados = linha.split(",");
                String placa = dados[0];
                String modelo = dados[1];
                String marca = dados[2];
                int ano = Integer.parseInt(dados[3]);
                double valor = Double.parseDouble(dados[4]);
                veiculos.add(new Automovel(placa, modelo, marca, ano, valor));
            }
        } catch (IOException e) {
            System.out.println("Arquivo não encontrado. Será criado ao salvar.");
        }
    }

    public void salvarDados() {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(ARQUIVO))) {
            for (Automovel a : veiculos) {
                bw.write(a.toString());
                bw.newLine();
            }
            System.out.println("Dados salvos com sucesso!");
        } catch (IOException e) {
            System.out.println("Erro ao salvar os dados.");
        }
    }

    public boolean inserirAutomovel(Automovel a) {
        if (buscarPorPlaca(a.getPlaca()) != null) {
            return false;
        }
        veiculos.add(a);
        return true;
    }

    public boolean removerAutomovel(String placa) {
        Automovel a = buscarPorPlaca(placa);
        return veiculos.remove(a);
    }

    public boolean alterarAutomovel(String placa, String modelo, String marca, int ano, double valor) {
        Automovel a = buscarPorPlaca(placa);
        if (a != null) {
            a.setModelo(modelo);
            a.setMarca(marca);
            a.setAno(ano);
            a.setValor(valor);
            return true;
        }
        return false;
    }

    public Automovel buscarPorPlaca(String placa) {
        for (Automovel a : veiculos) {
            if (a.getPlaca().equalsIgnoreCase(placa)) {
                return a;
            }
        }
        return null;
    }

    public void listarAutomoveisOrdenados(String criterio) {
        Comparator<Automovel> comparador = switch (criterio.toLowerCase()) {
            case "placa" -> Comparator.comparing(Automovel::getPlaca);
            case "modelo" -> Comparator.comparing(Automovel::getModelo);
            case "marca" -> Comparator.comparing(Automovel::getMarca);
            default -> null;
        };

        if (comparador != null) {
            veiculos.stream()
                    .sorted(comparador)
                    .forEach(a -> System.out.println(a.toDisplayString()));
        } else {
            System.out.println("Critério inválido.");
        }
    }
}
